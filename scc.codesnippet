<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>scc</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>TopLevel</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>class SCC
{
public:
    int V;//頂点数
    vector&lt;vector&lt;int&gt; &gt; G; //グラフの隣接リスト表現
    vector&lt;vector&lt;int&gt; &gt; rG; //辺の向きを逆にしたグラフ
    vector&lt;int&gt; vs; //帰りがけ順の並び
    vector&lt;bool&gt; used; //すでに調べたか
    vector&lt;int&gt; cmp; //属する強連結成分のトポロジカル順序
    SCC (int v) {
        V = v;
        G.resize(v);
        rG.resize(v);
        used.resize(v);
        cmp.resize(v);
    }
    
    void add_edge(int from, int to) {
        G[from].pb(to);
        rG[to].pb(from);
    }
    
    void dfs(int v) {
        used[v] = true;
        REP(i,G[v].size()) if (!used[G[v][i]]) dfs(G[v][i]);
        vs.pb(v);
    }
    
    void rdfs(int v, int k) {
        used[v] = true;
        cmp[v] = k;
        REP(i,rG[v].size()) if (!used[rG[v][i]]) rdfs(rG[v][i], k);
    }
    int scc() {
        fill(all(used),0);
        vs.clear();
        REP(v,V) if (!used[v]) dfs(v);
        fill(all(used),0);
        int k = 0;
        for (int i=vs.size()-1; i&gt;=0; i--) {
            if (!used[vs[i]]) rdfs(vs[i], k++);
        }
        return k;
    }
};
    </string>
	<key>IDECodeSnippetIdentifier</key>
	<string>A0AE6FE3-955F-40FA-89FA-033B85C4A986</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.C-Plus-Plus</string>
	<key>IDECodeSnippetTitle</key>
	<string>SCC</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
